generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Auth {
  id             String       @unique
  organizationId String
  ip             String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now())
  Organization   Organization @relation(fields: [organizationId], references: [id])

  @@id([id, organizationId])
}

model LinkedCategory {
  id            String          @unique
  menuId        String
  categoryId    String
  MenuCategory  MenuCategory    @relation(fields: [categoryId], references: [id])
  Menu          Menu            @relation(fields: [menuId], references: [id])
  LinkedProduct LinkedProduct[]

  @@id([menuId, categoryId])
}

model LinkedOption {
  id                String            @unique
  productId         String
  optionId          String
  price             Int
  MenuProductOption MenuProductOption @relation(fields: [optionId], references: [id])
  LinkedProduct     LinkedProduct     @relation(fields: [productId], references: [id])

  @@id([productId, optionId])
}

model LinkedProduct {
  id               String         @unique
  productId        String
  linkedCategoryId String
  price            Int
  LinkedCategory   LinkedCategory @relation(fields: [linkedCategoryId], references: [id])
  MenuProduct      MenuProduct    @relation(fields: [productId], references: [id])
  LinkedOption     LinkedOption[]

  @@id([productId, linkedCategoryId])
}

model Menu {
  id             String           @unique
  organizationId String
  name           String?
  Organization   Organization     @relation(fields: [organizationId], references: [id])
  LinkedCategory LinkedCategory[]

  @@id([id, organizationId])
}

model MenuCategory {
  id             String           @unique
  organizationId String
  name           String?
  Organization   Organization     @relation(fields: [organizationId], references: [id])
  LinkedCategory LinkedCategory[]

  @@id([id, organizationId])
}

model MenuProduct {
  id             String          @unique
  organizationId String
  name           String
  description    String?
  Organization   Organization    @relation(fields: [organizationId], references: [id])
  LinkedProduct  LinkedProduct[]

  @@id([id, organizationId])
}

model MenuProductOption {
  id             String         @unique
  organizationId String
  description    String?
  Organization   Organization   @relation(fields: [organizationId], references: [id])
  LinkedOption   LinkedOption[]

  @@id([id, organizationId])
}

model Organization {
  id                String              @id
  email             String              @unique
  password          String
  createdAt         DateTime            @default(now())
  Auth              Auth[]
  Menu              Menu[]
  MenuCategory      MenuCategory[]
  MenuProduct       MenuProduct[]
  MenuProductOption MenuProductOption[]
  Shop              Shop[]
}

model Shop {
  id             String       @unique
  organizationId String
  name           String
  description    String?
  siret          String
  address_line   String
  address_line2  String?
  city           String
  state          String
  zip            String
  country        String
  Organization   Organization @relation(fields: [organizationId], references: [id])

  @@id([id, organizationId])
}
