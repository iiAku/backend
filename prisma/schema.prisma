generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Auth {
  id             String       @unique @db.Uuid
  organizationId String       @db.Uuid
  ip             String?      @db.VarChar(45)
  createdAt      DateTime     @default(now()) @db.Timestamp(6)
  updatedAt      DateTime     @default(now()) @db.Timestamp(6)
  Organization   Organization @relation(fields: [organizationId], references: [id])

  @@id([id, organizationId])
}

model Menu {
  id             String       @unique @db.Uuid
  organizationId String       @db.Uuid
  name           String?      @db.VarChar(255)
  Organization   Organization @relation(fields: [organizationId], references: [id])
  categories     categories[]
  menus          menus[]

  @@id([id, organizationId])
}

model MenuCategory {
  id             String       @unique @db.Uuid
  organizationId String       @db.Uuid
  name           String?      @db.VarChar(45)
  Organization   Organization @relation(fields: [organizationId], references: [id])
  categories     categories[]

  @@id([id, organizationId])
}

model MenuProduct {
  id             String       @unique @db.Uuid
  organizationId String       @db.Uuid
  name           String       @db.VarChar(45)
  description    String?      @db.VarChar(255)
  Organization   Organization @relation(fields: [organizationId], references: [id])
  products       products[]

  @@id([id, organizationId])
}

model MenuProductOption {
  id             String       @unique @db.Uuid
  organizationId String       @db.Uuid
  description    String?      @db.VarChar(255)
  Organization   Organization @relation(fields: [organizationId], references: [id])
  options        options[]

  @@id([id, organizationId])
}

model Organization {
  id                String              @id @db.Uuid
  email             String              @unique @db.VarChar(255)
  password          String              @db.VarChar(255)
  createdAt         DateTime            @default(now()) @db.Timestamp(6)
  Auth              Auth[]
  Menu              Menu[]
  MenuCategory      MenuCategory[]
  MenuProduct       MenuProduct[]
  MenuProductOption MenuProductOption[]
  Shop              Shop[]
}

model Shop {
  id             String       @unique @db.Uuid
  organizationId String       @db.Uuid
  name           String       @db.VarChar(255)
  description    String?      @db.VarChar(255)
  siret          String       @db.VarChar(14)
  address_line   String       @db.VarChar(255)
  address_line2  String?      @db.VarChar(255)
  city           String       @db.VarChar(255)
  state          String       @db.VarChar(255)
  zip            String       @db.VarChar(255)
  country        String       @db.VarChar(255)
  Organization   Organization @relation(fields: [organizationId], references: [id])
  menus          menus[]

  @@id([id, organizationId])
}

model categories {
  id           String       @unique @db.Uuid
  menuId       String       @db.Uuid
  categoryId   String       @db.Uuid
  MenuCategory MenuCategory @relation(fields: [categoryId], references: [id])
  Menu         Menu         @relation(fields: [menuId], references: [id])
  products     products[]

  @@id([menuId, categoryId])
}

model menus {
  id     String @unique @db.Uuid
  menuId String @db.Uuid
  shopId String @db.Uuid
  Menu   Menu   @relation(fields: [menuId], references: [id])
  Shop   Shop   @relation(fields: [shopId], references: [id])

  @@id([menuId, shopId])
}

model options {
  id                String            @unique @db.Uuid
  productId         String            @db.Uuid
  optionId          String            @db.Uuid
  price             Int               @db.SmallInt
  MenuProductOption MenuProductOption @relation(fields: [optionId], references: [id])
  products          products          @relation(fields: [productId], references: [id])

  @@id([productId, optionId])
}

model products {
  id           String      @unique @db.Uuid
  productId    String      @db.Uuid
  categoriesId String      @db.Uuid
  price        Int         @db.SmallInt
  categories   categories  @relation(fields: [categoriesId], references: [id])
  MenuProduct  MenuProduct @relation(fields: [productId], references: [id])
  options      options[]

  @@id([productId, categoriesId])
}
